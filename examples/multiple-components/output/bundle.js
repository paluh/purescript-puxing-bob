// Generated by psc-bundle 0.9.2
var PS = {};
(function(exports) {
    "use strict";

  // module Data.Functor

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["apply"] = apply;
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  // module Data.Unit

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  // module Data.Show

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  // module Data.Semigroup

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  // module Data.Eq

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };                                 
  var eqChar = new Eq($foreign.refEq);   
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqChar"] = eqChar;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // module Data.HeytingAlgebra

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var BooleanAlgebra = function (__superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0) {
      this["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"] = __superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0;
  }; 
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return Data_HeytingAlgebra.heytingAlgebraBoolean;
  });
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
})(PS["Data.BooleanAlgebra"] = PS["Data.BooleanAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];        
  var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
      this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Category = PS["Control.Category"];        
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                      
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar29) {
                  return $dollar29;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [ v.constructor.name ]);
          })());
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 78, column 3 - line 78, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 137, column 3 - line 137, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  exports["Just"] = Just;
  exports["Nothing"] = Nothing;
  exports["fromJust"] = fromJust;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var runDisj = function (v) {
      return v;
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($164) {
                  return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($164));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictBooleanAlgebra) {
          return function (p) {
              return function ($167) {
                  return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($168) {
                      return Data_Monoid_Disj.Disj(p($168));
                  })($167));
              };
          };
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($169) {
              return any(dictFoldable)(Data_BooleanAlgebra.booleanAlgebraBoolean)(Data_Eq.eq(dictEq)($169));
          };
      };
  };
  var notElem = function (dictFoldable) {
      return function (dictEq) {
          return function (x) {
              return function ($170) {
                  return !elem(dictFoldable)(dictEq)(x)($170);
              };
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["intercalate"] = intercalate;
  exports["notElem"] = notElem;
  exports["sequence_"] = sequence_;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 46, column 3 - line 46, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var hush = Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["hush"] = hush;
})(PS["Control.Error.Util"] = PS["Control.Error.Util"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Data_Unit = PS["Data.Unit"];        
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  exports["Lazy"] = Lazy;
  exports["defer"] = defer;
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._setTimeout = function (nonCanceler, millis, aff) {
    var set = setTimeout, clear = clearTimeout;
    if (millis <= 0 && typeof setImmediate === "function") {
      set = setImmediate;
      clear = clearImmediate;
    }
    return function(success, error) {
      var canceler;

      var timeout = set(function() {
        canceler = aff(success, error);
      }, millis);

      return function(e) {
        return function(s, f) {
          if (canceler !== undefined) {
            return canceler(e)(s, f);
          } else {
            clear(timeout);
            s(true);
            return nonCanceler;
          }
        };
      };
    };
  }

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  }

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      success(v);
      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      try {
        return aff(function(v) {
          try {
            var v2 = f(v);
          } catch (err) {
            error(err)
          }
          success(v2);
        }, error);
      } catch (err) {
        error(err);
      }
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                s(true);
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._attempt = function (Left, Right, aff) {
    return function(success, error) {
      try {
        return aff(function(v) {
          success(Right(v));
        }, function(e) {
          success(Left(e));
        });
      } catch (err) {
        success(Left(err));
      }
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        successT(v)();
      }, function(e) {
        errorT(e)();
      });
    };
  }

  exports._liftEff = function (nonCanceler, e) {
    return function(success, error) {
      var result;
      try {
        result = e();
      } catch (err) {
        error(err);
        return nonCanceler;
      }

      success(result);
      return nonCanceler;
    };
  }
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.liftEff = liftEff;
  };                                                   
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn2"] = $foreign.runFn2;
  exports["runFn3"] = $foreign.runFn3;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Monoid = PS["Data.Monoid"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Canceler = function (x) {
      return x;
  };
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var functorAff = new Data_Functor.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });                                        
  var cancel = function (v) {
      return v;
  };
  var launchAff = (function () {
      var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($34) {
          return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($34)));
      });
      return function ($35) {
          return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($35)));
      };
  })();
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Data_Functor.map(functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
  var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
  var later$prime = function (n) {
      return function (aff) {
          return $foreign._setTimeout(nonCanceler, n, aff);
      };
  };
  var later = later$prime(0);
  var liftEff$prime = function (eff) {
      return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
  };                                                                         
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  exports["Canceler"] = Canceler;
  exports["attempt"] = attempt;
  exports["cancel"] = cancel;
  exports["later"] = later;
  exports["launchAff"] = launchAff;
  exports["liftEff'"] = liftEff$prime;
  exports["nonCanceler"] = nonCanceler;
  exports["runAff"] = runAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafePerformEff = function ($0) {
      return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff($0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafeThrowException = function ($0) {
      return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
  };
  var unsafeThrow = function ($1) {
      return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
  };
  exports["unsafeThrow"] = unsafeThrow;
  exports["unsafeThrowException"] = unsafeThrowException;
})(PS["Control.Monad.Eff.Exception.Unsafe"] = PS["Control.Monad.Eff.Exception.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.fromFoldableImpl = (function () {
    // jshint maxparams: 2
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      while (list !== emptyList) {
        result[count++] = list.head;
        list = list.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  exports["Tuple"] = Tuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (a) {
              return $foreign["uncons'"](function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
              })(function (b) {
                  return function (bs) {
                      return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(a)(b))(function (a$prime) {
                          return foldM(dictMonad)(f)(a$prime)(bs);
                      });
                  };
              });
          };
      };
  };
  exports["foldM"] = foldM;
  exports["fromFoldable"] = fromFoldable;
  exports["index"] = index;
  exports["last"] = last;
  exports["uncons"] = uncons;
  exports["cons"] = $foreign.cons;
  exports["length"] = $foreign.length;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Functor = PS["Data.Functor"];        
  var Clown = function (x) {
      return x;
  };
  var runClown = function (v) {
      return v;
  }; 
  var bifunctorClown = function (dictFunctor) {
      return new Data_Bifunctor.Bifunctor(function (f) {
          return function (v) {
              return function ($13) {
                  return Clown(Data_Functor.map(dictFunctor)(f)(runClown($13)));
              };
          };
      });
  };
  exports["Clown"] = Clown;
  exports["runClown"] = runClown;
  exports["bifunctorClown"] = bifunctorClown;
})(PS["Data.Bifunctor.Clown"] = PS["Data.Bifunctor.Clown"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.String

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.singleton = function (c) {
    return c;
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.count = function (p) {
    return function (s) {
      for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
      return i;
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];                                                    
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var dropWhile = function (p) {
      return function (s) {
          return $foreign.drop($foreign.count(p)(s))(s);
      };
  };                                                                                      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["charAt"] = charAt;
  exports["dropWhile"] = dropWhile;
  exports["indexOf"] = indexOf;
  exports["drop"] = $foreign.drop;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["length"] = $foreign.length;
  exports["singleton"] = $foreign.singleton;
  exports["split"] = $foreign.split;
  exports["toCharArray"] = $foreign.toCharArray;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $$Proxy = (function () {
      function Proxy() {

      };
      Proxy.value = new Proxy();
      return Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Type_Proxy = PS["Type.Proxy"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Function = PS["Data.Function"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];        
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var SigRecord = (function () {
      function SigRecord(value0) {
          this.value0 = value0;
      };
      SigRecord.create = function (value0) {
          return new SigRecord(value0);
      };
      return SigRecord;
  })();
  var SigNumber = (function () {
      function SigNumber() {

      };
      SigNumber.value = new SigNumber();
      return SigNumber;
  })();
  var SigBoolean = (function () {
      function SigBoolean() {

      };
      SigBoolean.value = new SigBoolean();
      return SigBoolean;
  })();
  var SigInt = (function () {
      function SigInt() {

      };
      SigInt.value = new SigInt();
      return SigInt;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigChar = (function () {
      function SigChar() {

      };
      SigChar.value = new SigChar();
      return SigChar;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var SigUnit = (function () {
      function SigUnit() {

      };
      SigUnit.value = new SigUnit();
      return SigUnit;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  };
  var showArray = function (f) {
      return function (xs) {
          return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(f)(xs)) + " ]");
      };
  };                  
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var force = function (f) {
      return f(Data_Unit.unit);
  };
  var showSignature = function (sig) {
      var needsParen = function (s) {
          if (s instanceof SigProd) {
              return true;
          };
          if (s instanceof SigRecord) {
              return true;
          };
          if (s instanceof SigNumber) {
              return false;
          };
          if (s instanceof SigBoolean) {
              return false;
          };
          if (s instanceof SigInt) {
              return false;
          };
          if (s instanceof SigString) {
              return false;
          };
          if (s instanceof SigChar) {
              return false;
          };
          if (s instanceof SigArray) {
              return true;
          };
          if (s instanceof SigUnit) {
              return false;
          };
          throw new Error("Failed pattern match at Data.Generic line 293, column 18 - line 302, column 21: " + [ s.constructor.name ]);
      };
      var paren = function (s) {
          if (needsParen(s)) {
              return "(" + (showSignature(s) + ")");
          };
          if (Data_Boolean.otherwise) {
              return showSignature(s);
          };
          throw new Error("Failed pattern match at Data.Generic line 275, column 1 - line 302, column 21: " + [ s.constructor.name ]);
      };
      return Data_Function.apply(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString))((function () {
          if (sig instanceof SigProd) {
              return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
          };
          if (sig instanceof SigRecord) {
              return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
          };
          if (sig instanceof SigNumber) {
              return [ "SigNumber" ];
          };
          if (sig instanceof SigBoolean) {
              return [ "SigBoolean" ];
          };
          if (sig instanceof SigInt) {
              return [ "SigInt" ];
          };
          if (sig instanceof SigString) {
              return [ "SigString" ];
          };
          if (sig instanceof SigChar) {
              return [ "SigChar" ];
          };
          if (sig instanceof SigArray) {
              return [ "SigArray ", paren(force(sig.value0)) ];
          };
          if (sig instanceof SigUnit) {
              return [ "SigUnit" ];
          };
          throw new Error("Failed pattern match at Data.Generic line 276, column 3 - line 286, column 27: " + [ sig.constructor.name ]);
      })());
  };
  var showLabel = function (l) {
      return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
  };
  var showDataConstructor = function (dc) {
      return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($241) {
          return showSignature(force($241));
      })(dc.sigValues) + "}")));
  };
  var showGenericSignature = new Data_Show.Show(showSignature);
  exports["SigProd"] = SigProd;
  exports["SigRecord"] = SigRecord;
  exports["SigNumber"] = SigNumber;
  exports["SigBoolean"] = SigBoolean;
  exports["SigInt"] = SigInt;
  exports["SigString"] = SigString;
  exports["SigChar"] = SigChar;
  exports["SigArray"] = SigArray;
  exports["SigUnit"] = SigUnit;
  exports["SProd"] = SProd;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["Generic"] = Generic;
  exports["fromSpine"] = fromSpine;
  exports["showDataConstructor"] = showDataConstructor;
  exports["showSignature"] = showSignature;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["showGenericSignature"] = showGenericSignature;
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (v) {
      return v;
  };
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Control_Category = PS["Control.Category"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  }; 
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      var __tco_acc = new Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 346, column 1 - line 349, column 42: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();
  var functorList = new Data_Functor.Functor(function (f) {
      return function (lst) {
          var go = function (v) {
              return function (acc) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      return Data_Function.apply(go(v.value1))(new Cons(f(v.value0), acc));
                  };
                  throw new Error("Failed pattern match at Data.List line 726, column 3 - line 729, column 48: " + [ v.constructor.name, acc.constructor.name ]);
              };
          };
          return Data_Function.apply(reverse)(go(lst)(Nil.value));
      };
  });
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($387) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($387));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, (function () {
      var go = function (__copy_v) {
          return function (__copy_b) {
              return function (__copy_v1) {
                  var v = __copy_v;
                  var b = __copy_b;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v1 instanceof Nil) {
                          return b;
                      };
                      if (v1 instanceof Cons) {
                          var __tco_v = v;
                          var __tco_b = v(b)(v1.value0);
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          b = __tco_b;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 734, column 3 - line 737, column 49: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (v) {
      return function (b) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return b;
              };
              if (v1 instanceof Cons) {
                  return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
              };
              throw new Error("Failed pattern match at Data.List line 732, column 3 - line 732, column 20: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
          };
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["fromFoldable"] = fromFoldable;
  exports["reverse"] = reverse;
  exports["singleton"] = singleton;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
    "use strict";

  // module Pux

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  function reactClass(htmlSignal) {
    return React.createClass({
      componentWillMount: function () {
        var ctx = this;
        htmlSignal.subscribe(function () {
          ctx.forceUpdate();
        });
      },
      render: function () {
        return htmlSignal.get()
      }
    });
  }

  exports.renderToDOM = function (selector) {
    var ReactDOM = (typeof require === 'function' && require('react-dom'))
                || (typeof window === 'object' && window.ReactDOM);
    return function (htmlSignal) {
      var elem = React.createElement(reactClass(htmlSignal));
      ReactDOM.render(elem, document.querySelector(selector))
      return function () {};
    };
  };

  exports.render = function (input, parentAction, html) {
    if (typeof html === 'string') {
      html = React.createElement('div', null, [html]);
    }

    function composeAction(parentAction, html) {
      var childAction = html.props && html.props.puxParentAction;
      var action = parentAction;
      if (childAction) {
        action = function (a) {
          return parentAction(childAction(a));
        };
      }
      return action;
    }

    function render(input, parentAction, html) {
      var props = html.props
      var newProps = {};

      for (var key in props) {
        if (key !== 'puxParentAction' && typeof props[key] === 'function') {
          newProps[key] = props[key](input, parentAction);
        }
      }

      var newChildren = React.Children.map(html.props.children, function (child) {
        if (typeof child === 'string') {
          return child;
        } else {
          return render(input, composeAction(parentAction, child), child);
        }
      });

      return React.cloneElement(html, newProps, newChildren);
    }

    return render(input, composeAction(parentAction, html), html);
  };
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {// module Signal

  function make(initial) {
    var subs = [];
    var val = initial;
    var sig = {
      subscribe: function(sub) {
        subs.push(sub);
        sub(val);
      },
      get: function() { return val; },
      set: function(newval) {
        val = newval;
        subs.forEach(function(sub) { sub(newval); });
      }
    };
    return sig;
  };

  exports.constant = make;

  exports.mapSig = function(fun) {
    return function(sig) {
      var out = make(fun(sig.get()));
      sig.subscribe(function(val) { out.set(fun(val)); });
      return out;
    };
  };

  exports.merge = function(sig1) {
    return function(sig2) {
      var out = make(sig1.get());
      sig2.subscribe(out.set);
      sig1.subscribe(out.set);
      return out;
    };
  };

  exports.foldp = function(fun) {
    return function(seed) {
      return function(sig) {
        var acc = seed;
        var out = make(acc);
        sig.subscribe(function(val) {
          acc = fun(val)(acc);
          out.set(acc);
        });
        return out;
      };
    };
  };

  exports.runSignal =
    function runSignal(sig) {
      return function() {
        sig.subscribe(function(val) {
          val();
        });
        return {};
      };
    };
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Signal"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Monoid = PS["Data.Monoid"];                               
  var mergeMany = function (dictFunctor) {
      return function (dictFoldable) {
          return function (sigs) {
              var mergeMaybe = function (v) {
                  return function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return v;
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return v1;
                      };
                      if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                          return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                      };
                      throw new Error("Failed pattern match at Signal line 52, column 9 - line 52, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                  };
              };
              return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Data_Functor.map(dictFunctor)(Data_Maybe.Just.create)(sigs));
          };
      };
  };
  var functorSignal = new Data_Functor.Functor($foreign.mapSig);
  var flippedMap = function (dictFunctor) {
      return Data_Function.flip(Data_Functor.map(dictFunctor));
  };
  exports["flippedMap"] = flippedMap;
  exports["mergeMany"] = mergeMany;
  exports["functorSignal"] = functorSignal;
  exports["constant"] = $foreign.constant;
  exports["foldp"] = $foreign.foldp;
  exports["runSignal"] = $foreign.runSignal;
})(PS["Signal"] = PS["Signal"] || {});
(function(exports) {// module Signal.Channel

  exports.channelP =
    function channelP(constant) {
      return function(v) {
        return function() {
          return constant(v);
        };
      };
    };

  exports.sendP =
    function sendP(chan, v) {
      return function(v) {
        return function() {
          chan.set(v);
        };
      };
    };

  exports.subscribe =
    function subscribe(chan) {
      return chan;
    };
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Signal.Channel"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Signal = PS["Signal"];        
  var send = $foreign.sendP;
  var channel = $foreign.channelP(Signal.constant);
  exports["channel"] = channel;
  exports["send"] = send;
  exports["subscribe"] = $foreign.subscribe;
})(PS["Signal.Channel"] = PS["Signal.Channel"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Pux"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude_1 = PS["Prelude"];
  var Prelude_1 = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var React = PS["React"];
  var Signal = PS["Signal"];
  var Signal_Channel = PS["Signal.Channel"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];        
  var onlyEffects = function (state) {
      return function (effects) {
          return {
              state: state, 
              effects: effects
          };
      };
  };
  var noEffects = function (state) {
      return {
          state: state, 
          effects: [  ]
      };
  };
  var start = function (config) {
      return function __do() {
          var v = Signal_Channel.channel(Data_List.Nil.value)();
          var mapAffect = function (affect) {
              return Data_Function.apply(Control_Monad_Aff.launchAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.later(affect))(function (v1) {
                  return Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Signal_Channel.send(v)(Data_List.singleton(v1)));
              }));
          };
          var foldState = function (effModel) {
              return function (action) {
                  return config.update(action)(effModel.state);
              };
          };
          var foldActions = function (actions) {
              return function (effModel) {
                  return Data_Foldable.foldl(Data_List.foldableList)(foldState)(noEffects(effModel.state))(actions);
              };
          };
          var actionSignal = Signal_Channel.subscribe(v);
          var input = Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
              return Data_Function.apply(Data_Maybe.fromJust(dictPartial))(Data_Function.apply(Signal.mergeMany(Data_List.functorList)(Data_List.foldableList))(Data_List.reverse(new Data_List.Cons(actionSignal, Data_Functor.map(Data_List.functorList)(Data_Functor.map(Signal.functorSignal)(Data_List.singleton))(Data_Function.apply(Data_List.fromFoldable(Data_Foldable.foldableArray))(config.inputs))))));
          });
          var effModelSignal = Signal.foldp(foldActions)(noEffects(config.initialState))(input);
          var effectsSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function ($7) {
              return Data_Functor.map(Data_Functor.functorArray)(mapAffect)((function (v1) {
                  return v1.effects;
              })($7));
          });
          var stateSignal = Signal.flippedMap(Signal.functorSignal)(effModelSignal)(function (v1) {
              return v1.state;
          });
          var htmlSignal = Signal.flippedMap(Signal.functorSignal)(stateSignal)(function (state) {
              return $foreign.render(function ($8) {
                  return Signal_Channel.send(v)(Data_List.singleton($8));
              }, function (a) {
                  return a;
              }, config.view(state));
          });
          Data_Function.apply(Signal.runSignal)(Signal.flippedMap(Signal.functorSignal)(effectsSignal)(Data_Foldable.sequence_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)))();
          return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))({
              html: htmlSignal, 
              state: stateSignal
          })();
      };
  };
  exports["noEffects"] = noEffects;
  exports["onlyEffects"] = onlyEffects;
  exports["start"] = start;
  exports["renderToDOM"] = $foreign.renderToDOM;
})(PS["Pux"] = PS["Pux"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Attributes

  exports.attr = function (key) {
    return function (val) {
      if (key === 'dangerouslySetInnerHTML') {
        val = { __html: val };
      } else if (key === 'style') {
        val = val.reduce(function (obj, tuple) {
          obj[tuple.value0] = tuple.value1;
          return obj;
        }, {});
      }
      return [key, val];
    };
  };
})(PS["Pux.Html.Attributes"] = PS["Pux.Html.Attributes"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Pux.Html.Attributes"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Pux_Html = PS["Pux.Html"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var href = $foreign.attr("href");
  var className = $foreign.attr("className");
  exports["className"] = className;
  exports["href"] = href;
})(PS["Pux.Html.Attributes"] = PS["Pux.Html.Attributes"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Elements

  var React = (typeof require === 'function' && require('react'))
           || (typeof window === 'object' && window.React);

  exports.text = function (text) {
    return text;
  };

  exports.element = function (tagName, attrs, children) {
    if (Array.isArray(children[0])) children = children[0];

    var props = attrs.reduce(function (obj, attr) {
      var key = attr[0];
      var val = attr[1];
      obj[key] = val;
      return obj;
    }, {});

    return React.createElement.apply(React, [tagName, props].concat(children));
  };
})(PS["Pux.Html.Elements"] = PS["Pux.Html.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Pux.Html.Elements"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];                            
  var ul = Data_Function_Uncurried.runFn3($foreign.element)("ul");      
  var p = Data_Function_Uncurried.runFn3($foreign.element)("p");      
  var li = Data_Function_Uncurried.runFn3($foreign.element)("li");
  var div = Data_Function_Uncurried.runFn3($foreign.element)("div");      
  var br = Data_Function_Uncurried.runFn3($foreign.element)("br");    
  var a = Data_Function_Uncurried.runFn3($foreign.element)("a");
  exports["a"] = a;
  exports["br"] = br;
  exports["div"] = div;
  exports["li"] = li;
  exports["p"] = p;
  exports["ul"] = ul;
  exports["text"] = $foreign.text;
})(PS["Pux.Html.Elements"] = PS["Pux.Html.Elements"] || {});
(function(exports) {
    'use strict';

  // module Pux.Html.Events

  exports.handler = function (key, action) {
    return [key, function (input, parentAction) {
      return function (ev) {
        if ((key === 'onSubmit')
        || (key === 'onClick' && ev.currentTarget.nodeName.toLowerCase() === 'a')) {
          ev.preventDefault();
        }
        input(parentAction(action(ev)))();
      };
    }];
  };
})(PS["Pux.Html.Events"] = PS["Pux.Html.Events"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Pux.Html.Events"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Pux_Html = PS["Pux.Html"];                                                              
  var onClick = Data_Function_Uncurried.runFn2($foreign.handler)("onClick");
  exports["onClick"] = onClick;
})(PS["Pux.Html.Events"] = PS["Pux.Html.Events"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Pux.Routing.Bob

  exports.push = function(url) {
    window.history.pushState({}, document.title, url);
  };
})(PS["Pux.Routing.Bob"] = PS["Pux.Routing.Bob"] || {});
(function(exports) {
    "use strict";

  // module Pux.Router

  exports.createUrlSignal = function locationChanged(constant) {
    var url = "";
    if (typeof window !== 'undefined') {
      url = window.location.pathname + window.location.search;
    }
    var out = constant(url);
    if (typeof window !== 'undefined') {
      window.onpopstate = function () {
        out.set(window.location.pathname + window.location.search);
      };
    }
    return function () {
      return out;
    };
  };
})(PS["Pux.Router"] = PS["Pux.Router"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Pux.Router"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Plus = PS["Control.Plus"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Int = PS["Data.Int"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Map = PS["Data.Map"];
  var DOM = PS["DOM"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Html_Attributes = PS["Pux.Html.Attributes"];
  var Global = PS["Global"];
  var Signal = PS["Signal"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Bind = PS["Control.Bind"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Pux_Html_Elements = PS["Pux.Html.Elements"];
  var sampleUrl = $foreign.createUrlSignal(Signal.constant);
  exports["sampleUrl"] = sampleUrl;
})(PS["Pux.Router"] = PS["Pux.Router"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Routing.Bob

  exports.encodeURIComponent = encodeURIComponent;
  exports.decodeURIComponent = decodeURIComponent;

  exports.camelsToHyphens = function(s) {
    return s.replace(/([A-Z])/g, function($1, _, i){
      if(i > 0) {
        return "-"+$1.toLowerCase();
      } else {
        return $1.toLowerCase();
      }
    });
  };
})(PS["Routing.Bob"] = PS["Routing.Bob"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];        
  var Position = (function () {
      function Position(value0) {
          this.value0 = value0;
      };
      Position.create = function (value0) {
          return new Position(value0);
      };
      return Position;
  })();
  var updatePosString = function (pos) {
      return function (str) {
          var updatePosChar = function (v) {
              return function (c) {
                  if (c === "\n") {
                      return new Position({
                          line: v.value0.line + 1 | 0, 
                          column: 1
                      });
                  };
                  if (c === "\r") {
                      return new Position({
                          line: v.value0.line + 1 | 0, 
                          column: 1
                      });
                  };
                  if (c === "\t") {
                      return new Position({
                          line: v.value0.line, 
                          column: (v.value0.column + 8 | 0) - (v.value0.column - 1) % 8
                      });
                  };
                  return new Position({
                      line: v.value0.line, 
                      column: v.value0.column + 1 | 0
                  });
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos)(Data_String.split("")(str));
      };
  }; 
  var initialPos = new Position({
      line: 1, 
      column: 1
  });
  exports["Position"] = Position;
  exports["initialPos"] = initialPos;
  exports["updatePosString"] = updatePosString;
})(PS["Text.Parsing.Parser.Pos"] = PS["Text.Parsing.Parser.Pos"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var PState = (function () {
      function PState(value0) {
          this.value0 = value0;
      };
      PState.create = function (value0) {
          return new PState(value0);
      };
      return PState;
  })();
  var ParserT = function (x) {
      return x;
  };
  var unParserT = function (v) {
      return v;
  }; 
  var runParserT = function (dictMonad) {
      return function (s) {
          return function (p) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(unParserT(p)(s))(function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v.result);
              });
          };
      };
  };
  var runParser = function (s) {
      return function ($65) {
          return Data_Identity.runIdentity(runParserT(Data_Identity.monadIdentity)(new PState({
              input: s, 
              position: Text_Parsing_Parser_Pos.initialPos
          }))($65));
      };
  };
  var parseFailed = function (s) {
      return function (pos) {
          return function (message) {
              return {
                  input: s, 
                  consumed: false, 
                  result: new Data_Either.Left(new ParseError({
                      message: message, 
                      position: pos
                  })), 
                  position: pos
              };
          };
      };
  }; 
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return Data_Function.apply(ParserT)(function (s) {
          return unParserT(f(Data_Unit.unit))(s);
      });
  });
  var functorParserT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (p) {
              var f$prime = function (o) {
                  return {
                      input: o.input, 
                      result: Data_Functor.map(Data_Either.functorEither)(f)(o.result), 
                      consumed: o.consumed, 
                      position: o.position
                  };
              };
              return Data_Function.apply(ParserT)(function (s) {
                  return Data_Functor.map(dictFunctor)(f$prime)(unParserT(p)(s));
              });
          };
      });
  };
  var fail = function (dictMonad) {
      return function (message) {
          return Data_Function.apply(ParserT)(function (v) {
              return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(parseFailed(v.value0.input)(v.value0.position)(message));
          });
      };
  };
  var monadParserT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeParserT(dictMonad);
      }, function () {
          return bindParserT(dictMonad);
      });
  };
  var bindParserT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyParserT(dictMonad);
      }, function (p) {
          return function (f) {
              var updateConsumedFlag = function (c) {
                  return function (o) {
                      return {
                          input: o.input, 
                          consumed: c || o.consumed, 
                          result: o.result, 
                          position: o.position
                      };
                  };
              };
              return Data_Function.apply(ParserT)(function (s) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(unParserT(p)(s))(function (o) {
                      if (o.result instanceof Data_Either.Left) {
                          return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())({
                              input: o.input, 
                              result: new Data_Either.Left(o.result.value0), 
                              consumed: o.consumed, 
                              position: o.position
                          });
                      };
                      if (o.result instanceof Data_Either.Right) {
                          return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(new PState({
                              input: o.input, 
                              position: o.position
                          })));
                      };
                      throw new Error("Failed pattern match at Text.Parsing.Parser line 79, column 5 - line 81, column 117: " + [ o.result.constructor.name ]);
                  });
              });
          };
      });
  };
  var applyParserT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, Control_Monad.ap(monadParserT(dictMonad)));
  };
  var applicativeParserT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyParserT(dictMonad);
      }, function (a) {
          return Data_Function.apply(ParserT)(function (v) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())({
                  input: v.value0.input, 
                  result: new Data_Either.Right(a), 
                  consumed: false, 
                  position: v.value0.position
              });
          });
      });
  };
  var altParserT = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, function (p1) {
          return function (p2) {
              return Data_Function.apply(ParserT)(function (s) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(unParserT(p1)(s))(function (o) {
                      if (o.result instanceof Data_Either.Left && !o.consumed) {
                          return unParserT(p2)(s);
                      };
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(o);
                  });
              });
          };
      });
  };
  exports["PState"] = PState;
  exports["ParseError"] = ParseError;
  exports["ParserT"] = ParserT;
  exports["fail"] = fail;
  exports["parseFailed"] = parseFailed;
  exports["runParser"] = runParser;
  exports["runParserT"] = runParserT;
  exports["unParserT"] = unParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["altParserT"] = altParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadParserT"] = monadParserT;
  exports["lazyParserT"] = lazyParserT;
})(PS["Text.Parsing.Parser"] = PS["Text.Parsing.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var $$try = function (dictFunctor) {
      return function (p) {
          var try$prime = function (v) {
              return function (v1) {
                  return function (v2) {
                      if (v2.result instanceof Data_Either.Left) {
                          return {
                              input: v, 
                              result: v2.result, 
                              consumed: false, 
                              position: v1
                          };
                      };
                      return v2;
                  };
              };
          };
          return Data_Function.apply(Text_Parsing_Parser.ParserT)(function (v) {
              return Data_Functor.map(dictFunctor)(try$prime(v.value0.input)(v.value0.position))(Text_Parsing_Parser.unParserT(p)(new Text_Parsing_Parser.PState({
                  input: v.value0.input, 
                  position: v.value0.position
              })));
          });
      };
  };
  exports["try"] = $$try;
})(PS["Text.Parsing.Parser.Combinators"] = PS["Text.Parsing.Parser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Prelude = PS["Prelude"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Identity = PS["Data.Identity"];
  var Boomerang = (function () {
      function Boomerang(value0) {
          this.value0 = value0;
      };
      Boomerang.create = function (value0) {
          return new Boomerang(value0);
      };
      return Boomerang;
  })();
  var semigroupoidSerializer = new Control_Semigroupoid.Semigroupoid(function (v) {
      return function (v1) {
          return function (c) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(v1(c))(function (v2) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(v(v2.value1))(function (v3) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(function ($37) {
                          return v2.value0(v3.value0($37));
                      }, v3.value1));
                  });
              });
          };
      };
  });
  var runSerializer = function (v) {
      return v;
  };
  var semigroupBoomerang = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return new Boomerang({
              prs: Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Data_Identity.functorIdentity)(v.value0.prs))(v1.value0.prs), 
              ser: function (b) {
                  return Control_Alt.alt(Data_Maybe.altMaybe)(runSerializer(v.value0.ser)(b))(runSerializer(v1.value0.ser)(b));
              }
          });
      };
  });
  var lazySerializer = new Control_Lazy.Lazy(function (f) {
      return function (a) {
          return runSerializer(f(Data_Unit.unit))(a);
      };
  });
  var lazyBoomerang = new Control_Lazy.Lazy(function (f) {
      var defer$prime = function (dictLazy) {
          return function (a) {
              return Control_Lazy.defer(dictLazy)(function (v) {
                  var $29 = f(Data_Unit.unit);
                  return a($29.value0);
              });
          };
      };
      return new Boomerang({
          prs: defer$prime(Text_Parsing_Parser.lazyParserT)(function (v) {
              return v.prs;
          }), 
          ser: defer$prime(lazySerializer)(function (v) {
              return v.ser;
          })
      });
  });
  var composePrs = function (prs1) {
      return function (prs2) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(prs1)(function (v) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(prs2)(function (v1) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(function ($38) {
                      return v(v1($38));
                  });
              });
          });
      };
  };
  var semigroupoidBoomerang = new Control_Semigroupoid.Semigroupoid(function (v) {
      return function (v1) {
          return new Boomerang({
              prs: composePrs(v.value0.prs)(v1.value0.prs), 
              ser: Control_Semigroupoid.compose(semigroupoidSerializer)(v1.value0.ser)(v.value0.ser)
          });
      };
  });
  exports["Boomerang"] = Boomerang;
  exports["composePrs"] = composePrs;
  exports["runSerializer"] = runSerializer;
  exports["lazySerializer"] = lazySerializer;
  exports["semigroupoidSerializer"] = semigroupoidSerializer;
  exports["semigroupoidBoomerang"] = semigroupoidBoomerang;
  exports["semigroupBoomerang"] = semigroupBoomerang;
  exports["lazyBoomerang"] = lazyBoomerang;
})(PS["Text.Boomerang.Prim"] = PS["Text.Boomerang.Prim"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var HNil = (function () {
      function HNil() {

      };
      HNil.value = new HNil();
      return HNil;
  })();
  var HCons = (function () {
      function HCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HCons.create = function (value0) {
          return function (value1) {
              return new HCons(value0, value1);
          };
      };
      return HCons;
  })();
  var hPop = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var hNil = HNil.value;
  var hSingleton = function (h) {
      return new HCons(h, hNil);
  };
  var hHead = function (v) {
      return v.value0;
  };
  var hCons = HCons.create;
  var hArg = function (ht2r) {
      return function (h2h) {
          return hPop(function ($10) {
              return ht2r(h2h($10));
          });
      };
  };
  var hMap = hArg(HCons.create);
  exports["HCons"] = HCons;
  exports["HNil"] = HNil;
  exports["hArg"] = hArg;
  exports["hCons"] = hCons;
  exports["hHead"] = hHead;
  exports["hMap"] = hMap;
  exports["hNil"] = hNil;
  exports["hPop"] = hPop;
  exports["hSingleton"] = hSingleton;
})(PS["Text.Boomerang.HStack"] = PS["Text.Boomerang.HStack"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Lazy = PS["Control.Lazy"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Boomerang_Prim = PS["Text.Boomerang.Prim"];
  var Text_Boomerang_HStack = PS["Text.Boomerang.HStack"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Category = PS["Control.Category"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var pureBmgSer = function (s) {
      return Data_Functor.map(Data_Functor.functorFn)(function (v) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create(Control_Category.id(Control_Category.categoryFn)))(v);
      })(s);
  };
  var pureBmgPrs = function (p) {
      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(p);
  };
  var pureBmg = function (p) {
      return function (s) {
          return new Text_Boomerang_Prim.Boomerang({
              prs: pureBmgPrs(p), 
              ser: pureBmgSer(s)
          });
      };
  };
  var nil = (function () {
      var ser = function (v) {
          if (v.value0 instanceof Data_List.Nil) {
              return new Data_Maybe.Just(v.value1);
          };
          return Data_Maybe.Nothing.value;
      };
      return pureBmg(Text_Boomerang_HStack.HCons.create(Data_List.Nil.value))(ser);
  })();
  var maph = function (p) {
      return function (s) {
          var ser = (function () {
              var hCons$prime = function (mh) {
                  return function (t) {
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Text_Boomerang_HStack.hCons)(t))(mh);
                  };
              };
              return Text_Boomerang_HStack.hArg(hCons$prime)(s);
          })();
          var prs = Text_Boomerang_HStack.hArg(Text_Boomerang_HStack.hCons)(p);
          return pureBmg(prs)(ser);
      };
  };
  var cons = (function () {
      var ser = function (v) {
          if (v.value0 instanceof Data_List.Cons) {
              return new Data_Maybe.Just(new Text_Boomerang_HStack.HCons(v.value0.value0, new Text_Boomerang_HStack.HCons(v.value0.value1, v.value1)));
          };
          return Data_Maybe.Nothing.value;
      };
      var prs = Text_Boomerang_HStack.hArg(Text_Boomerang_HStack.hMap)(function (lh) {
          return function (lt) {
              return new Data_List.Cons(lh, lt);
          };
      });
      return pureBmg(prs)(ser);
  })();
  var list = function (b) {
      return Data_Semigroup.append(Text_Boomerang_Prim.semigroupBoomerang)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(cons)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(b)(Control_Lazy.defer(Text_Boomerang_Prim.lazyBoomerang)(function (v) {
          return list(b);
      }))))(nil);
  };
  exports["cons"] = cons;
  exports["list"] = list;
  exports["maph"] = maph;
  exports["nil"] = nil;
  exports["pureBmg"] = pureBmg;
  exports["pureBmgPrs"] = pureBmgPrs;
  exports["pureBmgSer"] = pureBmgSer;
})(PS["Text.Boomerang.Combinators"] = PS["Text.Boomerang.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var string = function (dictMonad) {
      return function (str) {
          return Data_Function.apply(Text_Parsing_Parser.ParserT)(function (v) {
              return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))((function () {
                  var $16 = Data_String.indexOf(str)(v.value0.input);
                  if ($16 instanceof Data_Maybe.Just && $16.value0 === 0) {
                      return {
                          consumed: true, 
                          input: Data_String.drop(Data_String.length(str))(v.value0.input), 
                          result: new Data_Either.Right(str), 
                          position: Text_Parsing_Parser_Pos.updatePosString(v.value0.position)(str)
                      };
                  };
                  return Text_Parsing_Parser.parseFailed(v.value0.input)(v.value0.position)("Expected " + str);
              })());
          });
      };
  };
  var eof = function (dictMonad) {
      return Data_Function.apply(Text_Parsing_Parser.ParserT)(function (v) {
          return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))((function () {
              if (v.value0.input === "") {
                  return {
                      consumed: false, 
                      input: v.value0.input, 
                      result: new Data_Either.Right(Data_Unit.unit), 
                      position: v.value0.position
                  };
              };
              return Text_Parsing_Parser.parseFailed(v.value0.input)(v.value0.position)("Expected EOF");
          })());
      });
  };
  var anyChar = function (dictMonad) {
      return Data_Function.apply(Text_Parsing_Parser.ParserT)(function (v) {
          return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))((function () {
              var $27 = Data_String.charAt(0)(v.value0.input);
              if ($27 instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.parseFailed(v.value0.input)(v.value0.position)("Unexpected EOF");
              };
              if ($27 instanceof Data_Maybe.Just) {
                  return {
                      consumed: true, 
                      input: Data_String.drop(1)(v.value0.input), 
                      result: new Data_Either.Right($27.value0), 
                      position: Text_Parsing_Parser_Pos.updatePosString(v.value0.position)(Data_String.singleton($27.value0))
                  };
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String line 33, column 3 - line 35, column 113: " + [ $27.constructor.name ]);
          })());
      });
  };
  var satisfy = function (dictMonad) {
      return function (f) {
          return Text_Parsing_Parser_Combinators["try"](((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictMonad))(function (v) {
              var $33 = f(v);
              if ($33) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
              };
              if (!$33) {
                  return Data_Function.apply(Text_Parsing_Parser.fail(dictMonad))("Character '" + (Data_String.singleton(v) + "' did not satisfy predicate"));
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String line 41, column 3 - line 44, column 1: " + [ $33.constructor.name ]);
          }));
      };
  };
  var noneOf = function (dictMonad) {
      return function (ss) {
          return satisfy(dictMonad)(Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss));
      };
  };
  var oneOf = function (dictMonad) {
      return function (ss) {
          return satisfy(dictMonad)(Data_Function.flip(Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss));
      };
  };
  exports["anyChar"] = anyChar;
  exports["eof"] = eof;
  exports["noneOf"] = noneOf;
  exports["oneOf"] = oneOf;
  exports["satisfy"] = satisfy;
  exports["string"] = string;
})(PS["Text.Parsing.Parser.String"] = PS["Text.Parsing.Parser.String"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Error_Util = PS["Control.Error.Util"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Text_Boomerang_Combinators = PS["Text.Boomerang.Combinators"];
  var Text_Boomerang_HStack = PS["Text.Boomerang.HStack"];
  var Text_Boomerang_Prim = PS["Text.Boomerang.Prim"];
  var Text_Parsing_Parser_String_1 = PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_String_1 = PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Show = PS["Data.Show"];        
  var string = function (s) {
      var ser = function (v) {
          var $14 = v.value0 === s;
          if ($14) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(function (v1) {
                  return s + v1;
              }, v.value1));
          };
          if (!$14) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Text.Boomerang.String line 39, column 5 - line 41, column 19: " + [ $14.constructor.name ]);
      };
      return new Text_Boomerang_Prim.Boomerang({
          prs: Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Boomerang_HStack.hCons)(Text_Parsing_Parser_String_1.string(Data_Identity.monadIdentity)(s)), 
          ser: ser
      });
  };
  var serialize = function (v) {
      return function (s) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Text_Boomerang_Prim.runSerializer(v.value0.ser)(Text_Boomerang_HStack.hSingleton(s)))(function (v1) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v1.value0(""));
          });
      };
  };
  var parse = function (v) {
      return function (s) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Error_Util.hush(Text_Parsing_Parser.runParser(s)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(v.value0.prs)(function (v1) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String_1.eof(Data_Identity.monadIdentity))(function () {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v1);
              });
          }))))(function (v1) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Text_Boomerang_HStack.hHead(v1(Text_Boomerang_HStack.hNil)));
          });
      };
  };
  var oneOf = function (a) {
      var ser = function (v) {
          var $29 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar)(v.value0)(a);
          if ($29) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(function (v1) {
                  return Data_String.fromCharArray([ v.value0 ]) + v1;
              }, v.value1));
          };
          if (!$29) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Text.Boomerang.String line 51, column 5 - line 53, column 19: " + [ $29.constructor.name ]);
      };
      return new Text_Boomerang_Prim.Boomerang({
          prs: Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Boomerang_HStack.hCons)(Text_Parsing_Parser_String_1.oneOf(Data_Identity.monadIdentity)(a)), 
          ser: ser
      });
  };
  var noneOf = function (a) {
      var ser = function (v) {
          var $33 = !Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar)(v.value0)(a);
          if ($33) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(function (v1) {
                  return Data_String.fromCharArray([ v.value0 ]) + v1;
              }, v.value1));
          };
          if (!$33) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Text.Boomerang.String line 63, column 5 - line 65, column 19: " + [ $33.constructor.name ]);
      };
      return new Text_Boomerang_Prim.Boomerang({
          prs: Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Boomerang_HStack.hCons)(Text_Parsing_Parser_String_1.noneOf(Data_Identity.monadIdentity)(a)), 
          ser: ser
      });
  };
  var lit = function (s) {
      return new Text_Boomerang_Prim.Boomerang({
          prs: Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Text_Parsing_Parser_String_1.string(Data_Identity.monadIdentity)(s)), 
          ser: function ($36) {
              return Data_Maybe.Just.create(Data_Tuple.Tuple.create(function (v) {
                  return s + v;
              })($36));
          }
      });
  };
  var fromCharList = function (dictFoldable) {
      return function ($37) {
          return Data_String.fromCharArray(Data_Array.fromFoldable(dictFoldable)($37));
      };
  };
  var many1NoneOf = function (a) {
      var ser = function (h) {
          return new Data_Maybe.Just(Text_Boomerang_HStack.hMap(function ($38) {
              return Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_String.toCharArray($38));
          })(h));
      };
      var prs = Text_Boomerang_HStack.hMap(fromCharList(Data_List.foldableList));
      var a$prime = Data_String.toCharArray(a);
      return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.pureBmg(prs)(ser))(Text_Boomerang_Combinators.cons))(noneOf(a$prime)))(Text_Boomerang_Combinators.list(noneOf(a$prime)));
  };
  var many1Of = function (a) {
      var ser = function (h) {
          return new Data_Maybe.Just(Text_Boomerang_HStack.hMap(function ($39) {
              return Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_String.toCharArray($39));
          })(h));
      };
      var prs = Text_Boomerang_HStack.hMap(fromCharList(Data_List.foldableList));
      var a$prime = Data_String.toCharArray(a);
      return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.pureBmg(prs)(ser))(Text_Boomerang_Combinators.cons))(oneOf(a$prime)))(Text_Boomerang_Combinators.list(oneOf(a$prime)));
  };
  var digits = many1Of("0123456789");
  var $$int = (function () {
      var intSer = function (i) {
          return new Data_Maybe.Just(Data_Show.show(Data_Show.showInt)(i));
      };
      var intPrs = function (s) {
          return Data_Maybe.fromMaybe(0)(Data_Int.fromString(s));
      };
      return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(intPrs)(intSer))(digits);
  })();
  exports["digits"] = digits;
  exports["fromCharList"] = fromCharList;
  exports["int"] = $$int;
  exports["lit"] = lit;
  exports["many1NoneOf"] = many1NoneOf;
  exports["many1Of"] = many1Of;
  exports["noneOf"] = noneOf;
  exports["oneOf"] = oneOf;
  exports["parse"] = parse;
  exports["serialize"] = serialize;
  exports["string"] = string;
})(PS["Text.Boomerang.String"] = PS["Text.Boomerang.String"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Routing.Bob"];
  var Data_Array_1 = PS["Data.Array"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Data_Array_1 = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Text_Boomerang_Combinators = PS["Text.Boomerang.Combinators"];
  var Text_Boomerang_HStack = PS["Text.Boomerang.HStack"];
  var Text_Boomerang_Prim = PS["Text.Boomerang.Prim"];
  var Text_Boomerang_String = PS["Text.Boomerang.String"];
  var Type_Proxy = PS["Type.Proxy"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Show = PS["Data.Show"];        
  var Router = (function () {
      function Router(value0) {
          this.value0 = value0;
      };
      Router.create = function (value0) {
          return new Router(value0);
      };
      return Router;
  })();
  var toUrl = function (v) {
      return function (a) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              var __unused = function (dictPartial1) {
                  return function ($dollar24) {
                      return $dollar24;
                  };
              };
              return __unused(dictPartial)((function () {
                  var $33 = Text_Boomerang_String.serialize(v.value0)(a);
                  if ($33 instanceof Data_Maybe.Just) {
                      return $33.value0;
                  };
                  throw new Error("Failed pattern match at Routing.Bob line 141, column 18 - line 141, column 57: " + [ $33.constructor.name ]);
              })());
          });
      };
  };
  var str = Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph($foreign["decodeURIComponent"])(function ($72) {
      return Data_Maybe.Just.create($foreign["encodeURIComponent"]($72));
  }))(Text_Boomerang_String.many1NoneOf("/?#"));
  var serializeConstructorName = function (n) {
      return $foreign.camelsToHyphens(Data_Maybe.fromMaybe(n)(Data_Function.apply(function ($73) {
          return Data_Array_1.last(Data_String.split(".")($73));
      })(n)));
  };
  var join = function (b1) {
      return function (b2) {
          return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(b1)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_String.lit("/"))(b2));
      };
  };
  var intersperce = function (v) {
      return function (v1) {
          if (v instanceof Data_List.Nil) {
              return Text_Boomerang_Combinators.nil;
          };
          if (v instanceof Data_List.Cons) {
              var step = function (e) {
                  return function (l) {
                      return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(v1)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.cons)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(e)(l)));
                  };
              };
              return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.cons)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(v.value0)(Data_Foldable.foldr(Data_List.foldableList)(step)(Text_Boomerang_Combinators.nil)(v.value1)));
          };
          throw new Error("Failed pattern match at Routing.Bob line 56, column 1 - line 56, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var fromUrl = function (v) {
      return function (s) {
          return Text_Boomerang_String.parse(v.value0)(s);
      };
  };
  var $$boolean = (function () {
      var boolean$prime = (function () {
          var ser = function (v) {
              if (v) {
                  return new Data_Maybe.Just("on");
              };
              if (!v) {
                  return new Data_Maybe.Just("off");
              };
              throw new Error("Failed pattern match at Routing.Bob line 32, column 5 - line 32, column 20: " + [ v.constructor.name ]);
          };
          var prs = function (v) {
              if (v === "on") {
                  return true;
              };
              return false;
          };
          return Text_Boomerang_Combinators.maph(prs)(ser);
      })();
      return Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(boolean$prime)(Data_Semigroup.append(Text_Boomerang_Prim.semigroupBoomerang)(Text_Boomerang_String.string("on"))(Text_Boomerang_String.string("off")));
  })();
  var arrayFromList = (function () {
      var arrayFromFoldable = Data_Foldable.foldr(Data_List.foldableList)(Data_Array_1.cons)([  ]);
      return Text_Boomerang_Combinators.maph(arrayFromFoldable)(function ($74) {
          return Data_Maybe.Just.create(Data_List.fromFoldable(Data_Foldable.foldableArray)($74));
      });
  })();
  var signatureToSpineBoomerang = function (v) {
      if (v instanceof Data_Generic.SigProd) {
          var fromConstructor = function (constructor) {
              return function (prependWithConstructorName) {
                  var ser = function (v1) {
                      if (v1 instanceof Data_Generic.SProd) {
                          var $47 = v1.value0 === constructor.sigConstructor;
                          if ($47) {
                              return new Data_Maybe.Just(v1.value1);
                          };
                          if (!$47) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Routing.Bob line 89, column 7 - line 91, column 21: " + [ $47.constructor.name ]);
                      };
                      return Data_Maybe.Nothing.value;
                  };
                  var lazy = Text_Boomerang_Combinators.maph(Data_Function["const"])(function ($75) {
                      return Data_Maybe.Just.create((function (v1) {
                          return Data_Function.apply(v1)(Data_Unit.unit);
                      })($75));
                  });
                  var values = Data_Functor.map(Data_Functor.functorArray)(function (v1) {
                      return Data_Function.apply(v1)(Data_Unit.unit);
                  })(constructor.sigValues);
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_List.reverse)(Data_Array_1.foldM(Data_Maybe.monadMaybe)(function (r) {
                      return function (e) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(function (b) {
                              return new Data_List.Cons(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(lazy)(b), r);
                          })(signatureToSpineBoomerang(e));
                      };
                  })(Data_List.Nil.value)(values)))(function (v1) {
                      var bmg = Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(Data_Generic.SProd.create(constructor.sigConstructor))(ser))(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(arrayFromList)(intersperce(v1)(Text_Boomerang_String.lit("/"))));
                      if (prependWithConstructorName) {
                          var cn = serializeConstructorName(constructor.sigConstructor);
                          var $52 = Data_Array_1.length(values) === 0;
                          if ($52) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_String.lit(cn))(bmg));
                          };
                          if (!$52) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(join(Text_Boomerang_String.lit(cn))(bmg));
                          };
                          throw new Error("Failed pattern match at Routing.Bob line 80, column 9 - line 82, column 37: " + [ $52.constructor.name ]);
                      };
                      if (!prependWithConstructorName) {
                          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(bmg);
                      };
                      throw new Error("Failed pattern match at Routing.Bob line 77, column 5 - line 83, column 20: " + [ prependWithConstructorName.constructor.name ]);
                  });
              };
          };
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array_1.uncons(v.value1))(function (v1) {
              var $54 = Data_Array_1.length(v1.tail) === 0;
              if ($54) {
                  return fromConstructor(v1.head)(false);
              };
              if (!$54) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(fromConstructor(v1.head)(true))(function (v2) {
                      return Data_Array_1.foldM(Data_Maybe.monadMaybe)(function (r) {
                          return function (c) {
                              return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                                  return Data_Semigroup.append(Text_Boomerang_Prim.semigroupBoomerang)(v3)(r);
                              })(fromConstructor(c)(true));
                          };
                      })(v2)(v1.tail);
                  });
              };
              throw new Error("Failed pattern match at Routing.Bob line 65, column 3 - line 70, column 76: " + [ $54.constructor.name ]);
          });
      };
      if (v instanceof Data_Generic.SigBoolean) {
          var ser = function (v1) {
              if (v1 instanceof Data_Generic.SBoolean) {
                  return new Data_Maybe.Just(v1.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          return new Data_Maybe.Just(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(Data_Generic.SBoolean.create)(ser))($$boolean));
      };
      if (v instanceof Data_Generic.SigInt) {
          var ser = function (v1) {
              if (v1 instanceof Data_Generic.SInt) {
                  return new Data_Maybe.Just(v1.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          return new Data_Maybe.Just(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(Data_Generic.SInt.create)(ser))(Text_Boomerang_String["int"]));
      };
      if (v instanceof Data_Generic.SigString) {
          var ser = function (v1) {
              if (v1 instanceof Data_Generic.SString) {
                  return new Data_Maybe.Just(v1.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          return new Data_Maybe.Just(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(Data_Generic.SString.create)(ser))(str));
      };
      return Data_Maybe.Nothing.value;
  };
  var bob = function (dictGeneric) {
      return function (p) {
          var prs = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return v.value0;
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("Incorrect spine generated for signature: " + Data_Show.show(Data_Generic.showGenericSignature)(Data_Generic.toSignature(dictGeneric)(p)));
              };
              throw new Error("Failed pattern match at Routing.Bob line 115, column 3 - line 115, column 19: " + [ v.constructor.name ]);
          };
          return Control_Bind.bind(Data_Maybe.bindMaybe)(signatureToSpineBoomerang(Data_Generic.toSignature(dictGeneric)(p)))(function (v) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(prs)(function (v1) {
                  return new Data_Maybe.Just(new Data_Maybe.Just(v1));
              }))(Control_Semigroupoid.compose(Text_Boomerang_Prim.semigroupoidBoomerang)(Text_Boomerang_Combinators.maph(Data_Generic.fromSpine(dictGeneric))(function (v1) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic.toSpine(dictGeneric))(v1);
              }))(v)));
          });
      };
  };
  var router = function (dictGeneric) {
      return function (p) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(bob(dictGeneric)(p))(function (v) {
              return Data_Function.apply(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(new Router(v));
          });
      };
  };
  exports["Router"] = Router;
  exports["arrayFromList"] = arrayFromList;
  exports["bob"] = bob;
  exports["fromUrl"] = fromUrl;
  exports["intersperce"] = intersperce;
  exports["join"] = join;
  exports["router"] = router;
  exports["serializeConstructorName"] = serializeConstructorName;
  exports["signatureToSpineBoomerang"] = signatureToSpineBoomerang;
  exports["str"] = str;
  exports["toUrl"] = toUrl;
})(PS["Routing.Bob"] = PS["Routing.Bob"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var $foreign = PS["Pux.Routing.Bob"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Pux = PS["Pux"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Html_Attributes = PS["Pux.Html.Attributes"];
  var Pux_Html_Elements = PS["Pux.Html.Elements"];
  var Pux_Html_Events = PS["Pux.Html.Events"];
  var Pux_Router = PS["Pux.Router"];
  var Routing_Bob_1 = PS["Routing.Bob"];
  var Routing_Bob_1 = PS["Routing.Bob"];
  var Signal = PS["Signal"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var HistoryNotSupported = (function () {
      function HistoryNotSupported(value0) {
          this.value0 = value0;
      };
      HistoryNotSupported.create = function (value0) {
          return new HistoryNotSupported(value0);
      };
      return HistoryNotSupported;
  })();
  var NotFound = (function () {
      function NotFound(value0) {
          this.value0 = value0;
      };
      NotFound.create = function (value0) {
          return new NotFound(value0);
      };
      return NotFound;
  })();
  var RouteRequest = (function () {
      function RouteRequest(value0) {
          this.value0 = value0;
      };
      RouteRequest.create = function (value0) {
          return new RouteRequest(value0);
      };
      return RouteRequest;
  })();
  var UrlChanged = (function () {
      function UrlChanged(value0) {
          this.value0 = value0;
      };
      UrlChanged.create = function (value0) {
          return new UrlChanged(value0);
      };
      return UrlChanged;
  })();
  var Routed = (function () {
      function Routed(value0) {
          this.value0 = value0;
      };
      Routed.create = function (value0) {
          return new Routed(value0);
      };
      return Routed;
  })();
  var RoutingError = (function () {
      function RoutingError(value0) {
          this.value0 = value0;
      };
      RoutingError.create = function (value0) {
          return new RoutingError(value0);
      };
      return RoutingError;
  })();
  var toUrl = Data_Functor.map(Data_Functor.functorFn)(function (v) {
      return Data_Functor.map(Data_Functor.functorFn)(function (v1) {
          return "/" + v1;
      })(v);
  })(Routing_Bob_1.toUrl);
  var update = function (dictGeneric) {
      return function (router) {
          return function (v) {
              return function (state) {
                  if (v instanceof RouteRequest) {
                      var url = toUrl(router)(v.value0);
                      return Pux.onlyEffects(state)([ Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff["liftEff'"]($foreign.push(url)))(Data_Function.apply(Data_Function["const"])(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Routed(v.value0)))) ]);
                  };
                  if (v instanceof UrlChanged) {
                      return Pux.onlyEffects(state)([ (function () {
                          var $15 = Routing_Bob_1.fromUrl(router)(Data_String.dropWhile(function (v1) {
                              return v1 === "/";
                          })(v.value0));
                          if ($15 instanceof Data_Maybe.Just) {
                              return Data_Function.apply(function ($29) {
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Routed.create($29));
                              })($15.value0);
                          };
                          if ($15 instanceof Data_Maybe.Nothing) {
                              return Data_Function.apply(function ($30) {
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(RoutingError.create(NotFound.create($30)));
                              })(v.value0);
                          };
                          throw new Error("Failed pattern match at Pux.Routing.Bob line 59, column 7 - line 61, column 58: " + [ $15.constructor.name ]);
                      })() ]);
                  };
                  return Pux.noEffects(state);
              };
          };
      };
  };
  var sampleUrl = function __do() {
      var $31 = Pux_Router.sampleUrl();
      return (function (v) {
          return Signal.flippedMap(Signal.functorSignal)(v)(UrlChanged.create);
      })($31);
  };
  var sampleUrl$prime = function (fromRoutingAction) {
      return function __do() {
          var v = sampleUrl();
          return Signal.flippedMap(Signal.functorSignal)(v)(fromRoutingAction);
      };
  };
  var link = function (dictGeneric) {
      return function (router) {
          return function (fromRoutingAction) {
              return function (route) {
                  return function (attrs) {
                      return function (children) {
                          var url = toUrl(router)(route);
                          var attrs$prime = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pux_Html_Attributes.href(url), Pux_Html_Events.onClick(Data_Function["const"](Data_Function.apply(function ($32) {
                              return fromRoutingAction(RouteRequest.create($32));
                          })(route))) ])(attrs);
                          return Pux_Html_Elements.a(attrs$prime)(children);
                      };
                  };
              };
          };
      };
  };
  var functorRoutingError = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof HistoryNotSupported) {
              return new HistoryNotSupported(f(v.value0));
          };
          if (v instanceof NotFound) {
              return new NotFound(v.value0);
          };
          throw new Error("Failed pattern match at Pux.Routing.Bob line 30, column 3 - line 30, column 60: " + [ f.constructor.name, v.constructor.name ]);
      };
  });
  var functorRoutingActionWrapper = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof RouteRequest) {
              return new RouteRequest(v(v1.value0));
          };
          if (v1 instanceof Routed) {
              return new Routed(v(v1.value0));
          };
          if (v1 instanceof RoutingError) {
              return new RoutingError(Data_Functor.map(functorRoutingError)(v)(v1.value0));
          };
          if (v1 instanceof UrlChanged) {
              return new UrlChanged(v1.value0);
          };
          throw new Error("Failed pattern match at Pux.Routing.Bob line 42, column 3 - line 42, column 46: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["RouteRequest"] = RouteRequest;
  exports["UrlChanged"] = UrlChanged;
  exports["Routed"] = Routed;
  exports["RoutingError"] = RoutingError;
  exports["HistoryNotSupported"] = HistoryNotSupported;
  exports["NotFound"] = NotFound;
  exports["link"] = link;
  exports["sampleUrl"] = sampleUrl;
  exports["sampleUrl'"] = sampleUrl$prime;
  exports["toUrl"] = toUrl;
  exports["update"] = update;
  exports["functorRoutingError"] = functorRoutingError;
  exports["functorRoutingActionWrapper"] = functorRoutingActionWrapper;
})(PS["Pux.Routing.Bob"] = PS["Pux.Routing.Bob"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Prelude = PS["Prelude"];
  var Pux_Routing_Bob_1 = PS["Pux.Routing.Bob"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bifunctor_Clown = PS["Data.Bifunctor.Clown"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Identity = PS["Data.Identity"];
  var Pux = PS["Pux"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Routing_Bob_1 = PS["Pux.Routing.Bob"];
  var Routing_Bob = PS["Routing.Bob"];
  var Signal = PS["Signal"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var RoutingAction = (function () {
      function RoutingAction(value0) {
          this.value0 = value0;
      };
      RoutingAction.create = function (value0) {
          return new RoutingAction(value0);
      };
      return RoutingAction;
  })();
  var RawAction = (function () {
      function RawAction(value0) {
          this.value0 = value0;
      };
      RawAction.create = function (value0) {
          return new RawAction(value0);
      };
      return RawAction;
  })();
  var update = function (dictGeneric) {
      return function (router) {
          return function (action) {
              return function (state) {
                  var r = Pux_Routing_Bob_1.update(dictGeneric)(router)(action)(state);
                  var $8 = {};
                  for (var $9 in r) {
                      if (r.hasOwnProperty($9)) {
                          $8[$9] = r[$9];
                      };
                  };
                  $8.effects = Data_Functor.map(Data_Functor.functorArray)(function (v) {
                      return Data_Functor.map(Control_Monad_Aff.functorAff)(RoutingAction.create)(v);
                  })(r.effects);
                  return $8;
              };
          };
      };
  };
  var sampleUrl = Pux_Routing_Bob_1["sampleUrl'"](RoutingAction.create);
  var mapRoute = function (k) {
      return function ($15) {
          return Data_Identity.runIdentity(Data_Bifunctor_Clown.runClown(k(Data_Bifunctor_Clown.bifunctorClown(Data_Identity.functorIdentity))(Data_Bifunctor_Clown.Clown(Data_Identity.Identity($15)))));
      };
  };
  var link = function (dictGeneric) {
      return function (router) {
          return function (route) {
              return function (attrs) {
                  return function (children) {
                      return Pux_Routing_Bob_1.link(dictGeneric)(router)(RoutingAction.create)(route)(attrs)(children);
                  };
              };
          };
      };
  };
  var link$prime = function (dictGeneric) {
      return function (mapAction) {
          return function (router) {
              return function (route) {
                  return link(dictGeneric)(router)(mapRoute(function (dictBifunctor) {
                      return mapAction(dictBifunctor);
                  })(route));
              };
          };
      };
  };
  var bifunctorAction = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof RoutingAction) {
                  return new RoutingAction(Data_Functor.map(Pux_Routing_Bob_1.functorRoutingActionWrapper)(v)(v2.value0));
              };
              if (v2 instanceof RawAction) {
                  return new RawAction(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Pux.Routing.Bob.Component line 22, column 3 - line 22, column 56: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["RoutingAction"] = RoutingAction;
  exports["RawAction"] = RawAction;
  exports["link"] = link;
  exports["link'"] = link$prime;
  exports["mapRoute"] = mapRoute;
  exports["sampleUrl"] = sampleUrl;
  exports["update"] = update;
  exports["bifunctorAction"] = bifunctorAction;
})(PS["Pux.Routing.Bob.Component"] = PS["Pux.Routing.Bob.Component"] || {});
(function(exports) {
  // Generated by psc version 0.9.2
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var DOM = PS["DOM"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Pux = PS["Pux"];
  var Pux_Html = PS["Pux.Html"];
  var Pux_Html_Attributes = PS["Pux.Html.Attributes"];
  var Pux_Html_Elements = PS["Pux.Html.Elements"];
  var Pux_Html_Events = PS["Pux.Html.Events"];
  var Pux_Routing_Bob = PS["Pux.Routing.Bob"];
  var Pux_Routing_Bob_Component_1 = PS["Pux.Routing.Bob.Component"];
  var Pux_Routing_Bob_Component_1 = PS["Pux.Routing.Bob.Component"];
  var Routing_Bob_1 = PS["Routing.Bob"];
  var Routing_Bob_1 = PS["Routing.Bob"];
  var Signal_Channel = PS["Signal.Channel"];
  var Type_Proxy = PS["Type.Proxy"];
  var Prelude = PS["Prelude"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];        
  var Expanded = (function () {
      function Expanded() {

      };
      Expanded.value = new Expanded();
      return Expanded;
  })();
  var Minimized = (function () {
      function Minimized() {

      };
      Minimized.value = new Minimized();
      return Minimized;
  })();
  var Profile = (function () {
      function Profile() {

      };
      Profile.value = new Profile();
      return Profile;
  })();
  var Inbox = (function () {
      function Inbox() {

      };
      Inbox.value = new Inbox();
      return Inbox;
  })();
  var Settings = (function () {
      function Settings() {

      };
      Settings.value = new Settings();
      return Settings;
  })();
  var ProfileClick = (function () {
      function ProfileClick() {

      };
      ProfileClick.value = new ProfileClick();
      return ProfileClick;
  })();
  var InboxClick = (function () {
      function InboxClick() {

      };
      InboxClick.value = new InboxClick();
      return InboxClick;
  })();
  var SettingsClick = (function () {
      function SettingsClick() {

      };
      SettingsClick.value = new SettingsClick();
      return SettingsClick;
  })();
  var AppRoute = (function () {
      function AppRoute(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AppRoute.create = function (value0) {
          return function (value1) {
              return new AppRoute(value0, value1);
          };
      };
      return AppRoute;
  })();
  var MainWindowRawAction = (function () {
      function MainWindowRawAction(value0) {
          this.value0 = value0;
      };
      MainWindowRawAction.create = function (value0) {
          return new MainWindowRawAction(value0);
      };
      return MainWindowRawAction;
  })();
  var SideBarRawAction = (function () {
      function SideBarRawAction(value0) {
          this.value0 = value0;
      };
      SideBarRawAction.create = function (value0) {
          return new SideBarRawAction(value0);
      };
      return SideBarRawAction;
  })();
  var genericSideBarRoute = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Main.Expanded" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Expanded.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Main.Minimized" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Minimized.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Main.SideBarRoute", [ {
          sigConstructor: "Main.Expanded", 
          sigValues: [  ]
      }, {
          sigConstructor: "Main.Minimized", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Expanded) {
          return new Data_Generic.SProd("Main.Expanded", [  ]);
      };
      if (v instanceof Minimized) {
          return new Data_Generic.SProd("Main.Minimized", [  ]);
      };
      throw new Error("Failed pattern match at Main line 95, column 1 - line 95, column 60: " + [ v.constructor.name ]);
  });
  var genericMainWindowRoute = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Main.Profile" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Profile.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Main.Inbox" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Inbox.value);
      };
      if (v instanceof Data_Generic.SProd && (v.value0 === "Main.Settings" && v.value1.length === 0)) {
          return new Data_Maybe.Just(Settings.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Main.MainWindowRoute", [ {
          sigConstructor: "Main.Profile", 
          sigValues: [  ]
      }, {
          sigConstructor: "Main.Inbox", 
          sigValues: [  ]
      }, {
          sigConstructor: "Main.Settings", 
          sigValues: [  ]
      } ]);
  }, function (v) {
      if (v instanceof Profile) {
          return new Data_Generic.SProd("Main.Profile", [  ]);
      };
      if (v instanceof Inbox) {
          return new Data_Generic.SProd("Main.Inbox", [  ]);
      };
      if (v instanceof Settings) {
          return new Data_Generic.SProd("Main.Settings", [  ]);
      };
      throw new Error("Failed pattern match at Main line 29, column 1 - line 29, column 66: " + [ v.constructor.name ]);
  });
  var mainWindowUpdate = function (v) {
      return function (v1) {
          return function (state) {
              if (v1 instanceof Pux_Routing_Bob_Component_1.RawAction && v1.value0 instanceof ProfileClick) {
                  return Data_Function.apply(Pux.noEffects)((function () {
                      var $56 = {};
                      for (var $57 in state) {
                          if (state.hasOwnProperty($57)) {
                              $56[$57] = state[$57];
                          };
                      };
                      $56.profileCounter = state.profileCounter + 1 | 0;
                      return $56;
                  })());
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RawAction && v1.value0 instanceof InboxClick) {
                  return Data_Function.apply(Pux.noEffects)((function () {
                      var $59 = {};
                      for (var $60 in state) {
                          if (state.hasOwnProperty($60)) {
                              $59[$60] = state[$60];
                          };
                      };
                      $59.inboxCounter = state.inboxCounter + 1 | 0;
                      return $59;
                  })());
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RawAction && v1.value0 instanceof SettingsClick) {
                  return Data_Function.apply(Pux.noEffects)((function () {
                      var $62 = {};
                      for (var $63 in state) {
                          if (state.hasOwnProperty($63)) {
                              $62[$63] = state[$63];
                          };
                      };
                      $62.settingsCounter = state.settingsCounter + 1 | 0;
                      return $62;
                  })());
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RoutingAction && v1.value0 instanceof Pux_Routing_Bob.Routed) {
                  return Data_Function.apply(Pux.noEffects)((function () {
                      var $65 = {};
                      for (var $66 in state) {
                          if (state.hasOwnProperty($66)) {
                              $65[$66] = state[$66];
                          };
                      };
                      $65.activeTab = v1.value0.value0;
                      return $65;
                  })());
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RoutingAction && v1.value0 instanceof Pux_Routing_Bob.RoutingError) {
                  return Pux.noEffects(state);
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RoutingAction) {
                  return Pux_Routing_Bob_Component_1.update(genericMainWindowRoute)(v)(v1.value0)(state);
              };
              throw new Error("Failed pattern match at Main line 48, column 1 - line 49, column 66: " + [ v.constructor.name, v1.constructor.name, state.constructor.name ]);
          };
      };
  };
  var genericAppRoute = new Data_Generic.Generic(function (v) {
      if (v instanceof Data_Generic.SProd && (v.value0 === "Main.AppRoute" && v.value1.length === 2)) {
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AppRoute.create))(Data_Generic.fromSpine(genericMainWindowRoute)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(genericSideBarRoute)(v.value1[1](Data_Unit.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Main.AppRoute", [ {
          sigConstructor: "Main.AppRoute", 
          sigValues: [ function ($dollarq1) {
              return Data_Generic.toSignature(genericMainWindowRoute)(Data_Generic.anyProxy);
          }, function ($dollarq1) {
              return Data_Generic.toSignature(genericSideBarRoute)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function (v) {
      return new Data_Generic.SProd("Main.AppRoute", [ function ($dollarq) {
          return Data_Generic.toSpine(genericMainWindowRoute)(v.value0);
      }, function ($dollarq) {
          return Data_Generic.toSpine(genericSideBarRoute)(v.value1);
      } ]);
  });
  var eqSideBarRoute = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Expanded && y instanceof Expanded) {
              return true;
          };
          if (x instanceof Minimized && y instanceof Minimized) {
              return true;
          };
          return false;
      };
  });
  var sideBarUpdate = function (v) {
      return function (v1) {
          return function (state) {
              if (v1 instanceof Pux_Routing_Bob_Component_1.RawAction) {
                  return Pux.noEffects(state);
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RoutingAction && v1.value0 instanceof Pux_Routing_Bob.Routed) {
                  if (Data_Eq.eq(eqSideBarRoute)(v1.value0.value0)(Expanded.value)) {
                      return Pux.noEffects(Expanded.value);
                  };
                  if (Data_Eq.eq(eqSideBarRoute)(v1.value0.value0)(Minimized.value)) {
                      return Pux.noEffects(Minimized.value);
                  };
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RoutingAction && v1.value0 instanceof Pux_Routing_Bob.RoutingError) {
                  return Pux.noEffects(state);
              };
              if (v1 instanceof Pux_Routing_Bob_Component_1.RoutingAction) {
                  return Pux_Routing_Bob_Component_1.update(genericSideBarRoute)(v)(v1.value0)(state);
              };
              throw new Error("Failed pattern match at Main line 105, column 1 - line 105, column 54: " + [ v.constructor.name, v1.constructor.name, state.constructor.name ]);
          };
      };
  };
  var sideBarView = function (dictGeneric) {
      return function (router) {
          return function (mapAction) {
              return function (state) {
                  var link$prime$prime = Pux_Routing_Bob_Component_1["link'"](dictGeneric)(function (dictBifunctor) {
                      return mapAction(dictBifunctor);
                  })(router);
                  return Pux_Html_Elements.p([  ])((function () {
                      var $91 = Data_Eq.eq(eqSideBarRoute)(state)(Expanded.value);
                      if ($91) {
                          return [ Pux_Html_Elements.text("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."), link$prime$prime(Minimized.value)([  ])([ Pux_Html_Elements.text("hide") ]) ];
                      };
                      if (!$91) {
                          return [ Pux_Html_Elements.text("Lorem ipsum..."), link$prime$prime(Expanded.value)([  ])([ Pux_Html_Elements.text("show more") ]) ];
                      };
                      throw new Error("Failed pattern match at Main line 114, column 3 - line 123, column 10: " + [ $91.constructor.name ]);
                  })());
              };
          };
      };
  };
  var eqMainWindowRoute = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Profile && y instanceof Profile) {
              return true;
          };
          if (x instanceof Inbox && y instanceof Inbox) {
              return true;
          };
          if (x instanceof Settings && y instanceof Settings) {
              return true;
          };
          return false;
      };
  });
  var mainWindowView = function (dictGeneric) {
      return function (router) {
          return function (mapAction) {
              return function (state) {
                  var tabBody = function (action) {
                      return function (counter) {
                          return function (label) {
                              return Pux_Html_Elements.a([ Pux_Html_Attributes.href("#"), Data_Function.apply(Pux_Html_Events.onClick)(Data_Function["const"](action)) ])([ Pux_Html_Elements.text(label + " action"), Pux_Html_Elements.br([  ])([  ]), Data_Function.apply(function ($125) {
                                  return Pux_Html_Elements.text(Data_Show.show(Data_Show.showInt)($125));
                              })(counter) ]);
                          };
                      };
                  };
                  var link$prime$prime = Pux_Routing_Bob_Component_1["link'"](dictGeneric)(function (dictBifunctor) {
                      return mapAction(dictBifunctor);
                  })(router);
                  var tabHeader = function (route) {
                      return function (label) {
                          return Pux_Html_Elements.li((function () {
                              var $94 = Data_Eq.eq(eqMainWindowRoute)(state.activeTab)(route);
                              if ($94) {
                                  return [ Pux_Html_Attributes.className("active") ];
                              };
                              if (!$94) {
                                  return [  ];
                              };
                              throw new Error("Failed pattern match at Main line 78, column 8 - line 80, column 16: " + [ $94.constructor.name ]);
                          })())([ link$prime$prime(route)([  ])([ Pux_Html_Elements.text(label) ]) ]);
                      };
                  };
                  return Pux_Html_Elements.div([  ])([ Pux_Html_Elements.ul([  ])([ tabHeader(Profile.value)("profile"), tabHeader(Inbox.value)("inbox"), tabHeader(Settings.value)("settings") ]), Pux_Html_Elements.div([  ])((function () {
                      if (state.activeTab instanceof Profile) {
                          return [ tabBody(mapAction(Pux_Routing_Bob_Component_1.bifunctorAction)(new Pux_Routing_Bob_Component_1.RawAction(ProfileClick.value)))(state.profileCounter)("profile") ];
                      };
                      if (state.activeTab instanceof Inbox) {
                          return [ tabBody(mapAction(Pux_Routing_Bob_Component_1.bifunctorAction)(new Pux_Routing_Bob_Component_1.RawAction(InboxClick.value)))(state.inboxCounter)("inbox") ];
                      };
                      if (state.activeTab instanceof Settings) {
                          return [ tabBody(mapAction(Pux_Routing_Bob_Component_1.bifunctorAction)(new Pux_Routing_Bob_Component_1.RawAction(SettingsClick.value)))(state.settingsCounter)("settings") ];
                      };
                      throw new Error("Failed pattern match at Main line 68, column 7 - line 72, column 105: " + [ state.activeTab.constructor.name ]);
                  })()) ]);
              };
          };
      };
  };
  var appView = function (router) {
      return function (state) {
          var mapSideBarRoute = function (sideBarRoute) {
              return new AppRoute(state.mainWindowState.activeTab, sideBarRoute);
          };
          var mapSideBarAction = function (dictBifunctor) {
              return Data_Bifunctor.bimap(dictBifunctor)(mapSideBarRoute)(SideBarRawAction.create);
          };
          var mapMainWindowRoute = function (mainWindowRoute) {
              return new AppRoute(mainWindowRoute, state.sideBarState);
          };
          var mapMainWindowAction = function (dictBifunctor) {
              return Data_Bifunctor.bimap(dictBifunctor)(function (r) {
                  return new AppRoute(r, state.sideBarState);
              })(MainWindowRawAction.create);
          };
          return Pux_Html_Elements.div([  ])([ mainWindowView(genericAppRoute)(router)(function (dictBifunctor) {
              return mapMainWindowAction(dictBifunctor);
          })(state.mainWindowState), sideBarView(genericAppRoute)(router)(function (dictBifunctor) {
              return mapSideBarAction(dictBifunctor);
          })(state.sideBarState) ]);
      };
  };
  var appUpdate = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (state) {
                      var mr = v;
                      if (v3 instanceof Pux_Routing_Bob_Component_1.RawAction && v3.value0 instanceof MainWindowRawAction) {
                          var mapRoute = function (mainWindowRoute) {
                              return new AppRoute(mainWindowRoute, state.sideBarState);
                          };
                          var r = mainWindowUpdate(mr)(new Pux_Routing_Bob_Component_1.RawAction(v3.value0.value0))(state.mainWindowState);
                          return {
                              state: (function () {
                                  var $101 = {};
                                  for (var $102 in state) {
                                      if (state.hasOwnProperty($102)) {
                                          $101[$102] = state[$102];
                                      };
                                  };
                                  $101.mainWindowState = r.state;
                                  return $101;
                              })(), 
                              effects: Data_Functor.map(Data_Functor.functorArray)(function (v4) {
                                  return Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Bifunctor.bimap(Pux_Routing_Bob_Component_1.bifunctorAction)(mapRoute)(MainWindowRawAction.create))(v4);
                              })(r.effects)
                          };
                      };
                      var sr = v1;
                      if (v3 instanceof Pux_Routing_Bob_Component_1.RawAction && v3.value0 instanceof SideBarRawAction) {
                          var mapRoute = function (sideBarRoute) {
                              return new AppRoute(state.mainWindowState.activeTab, sideBarRoute);
                          };
                          var r = sideBarUpdate(sr)(new Pux_Routing_Bob_Component_1.RawAction(v3.value0.value0))(state.sideBarState);
                          return {
                              state: (function () {
                                  var $105 = {};
                                  for (var $106 in state) {
                                      if (state.hasOwnProperty($106)) {
                                          $105[$106] = state[$106];
                                      };
                                  };
                                  $105.sideBarState = r.state;
                                  return $105;
                              })(), 
                              effects: Data_Functor.map(Data_Functor.functorArray)(function (v4) {
                                  return Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Bifunctor.bimap(Pux_Routing_Bob_Component_1.bifunctorAction)(mapRoute)(SideBarRawAction.create))(v4);
                              })(r.effects)
                          };
                      };
                      if (v3 instanceof Pux_Routing_Bob_Component_1.RoutingAction && v3.value0 instanceof Pux_Routing_Bob.Routed) {
                          var sr = sideBarUpdate(v1)(new Pux_Routing_Bob_Component_1.RoutingAction(new Pux_Routing_Bob.Routed(v3.value0.value0.value1)))(state.sideBarState);
                          var mr = mainWindowUpdate(v)(new Pux_Routing_Bob_Component_1.RoutingAction(new Pux_Routing_Bob.Routed(v3.value0.value0.value0)))(state.mainWindowState);
                          var mapSideBarRoute = function (sideBarRoute1) {
                              return new AppRoute(mr.state.activeTab, sideBarRoute1);
                          };
                          var mapMainWindowRoute = function (mainWindowRoute1) {
                              return new AppRoute(mainWindowRoute1, sr.state);
                          };
                          return {
                              state: (function () {
                                  var $109 = {};
                                  for (var $110 in state) {
                                      if (state.hasOwnProperty($110)) {
                                          $109[$110] = state[$110];
                                      };
                                  };
                                  $109.sideBarState = sr.state;
                                  $109.mainWindowState = mr.state;
                                  return $109;
                              })(), 
                              effects: Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(function (v4) {
                                  return Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Bifunctor.bimap(Pux_Routing_Bob_Component_1.bifunctorAction)(mapSideBarRoute)(SideBarRawAction.create))(v4);
                              })(sr.effects))(Data_Functor.map(Data_Functor.functorArray)(function (v4) {
                                  return Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Bifunctor.bimap(Pux_Routing_Bob_Component_1.bifunctorAction)(mapMainWindowRoute)(MainWindowRawAction.create))(v4);
                              })(mr.effects))
                          };
                      };
                      if (v3 instanceof Pux_Routing_Bob_Component_1.RoutingAction && v3.value0 instanceof Pux_Routing_Bob.RoutingError) {
                          return Pux.noEffects(state);
                      };
                      if (v3 instanceof Pux_Routing_Bob_Component_1.RoutingAction) {
                          return Pux_Routing_Bob_Component_1.update(genericAppRoute)(v2)(v3.value0)(state);
                      };
                      throw new Error("Failed pattern match at Main line 152, column 1 - line 159, column 73: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name, state.constructor.name ]);
                  };
              };
          };
      };
  };
  var main = function __do() {
      var v = Pux_Routing_Bob_Component_1.sampleUrl();
      var config = Control_Bind.bind(Data_Maybe.bindMaybe)(Routing_Bob_1.router(genericMainWindowRoute)((Type_Proxy["Proxy"]).value))(function (v1) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Routing_Bob_1.router(genericSideBarRoute)((Type_Proxy["Proxy"]).value))(function (v2) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Routing_Bob_1.router(genericAppRoute)((Type_Proxy["Proxy"]).value))(function (v3) {
                  var view = appView(v3);
                  var update = appUpdate(v1)(v2)(v3);
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                      update: update, 
                      view: view, 
                      inputs: [ v ], 
                      initialState: {
                          mainWindowState: {
                              activeTab: Profile.value, 
                              profileCounter: 0, 
                              inboxCounter: 0, 
                              settingsCounter: 0
                          }, 
                          sideBarState: Minimized.value
                      }
                  });
              });
          });
      });
      if (config instanceof Data_Maybe.Just) {
          var v1 = Pux.start(config.value0)();
          return Pux.renderToDOM("#app")(v1.html)();
      };
      if (config instanceof Data_Maybe.Nothing) {
          return Data_Unit.unit;
      };
      throw new Error("Failed pattern match at Main line 234, column 3 - line 239, column 21: " + [ config.constructor.name ]);
  };
  exports["MainWindowRawAction"] = MainWindowRawAction;
  exports["SideBarRawAction"] = SideBarRawAction;
  exports["AppRoute"] = AppRoute;
  exports["ProfileClick"] = ProfileClick;
  exports["InboxClick"] = InboxClick;
  exports["SettingsClick"] = SettingsClick;
  exports["Profile"] = Profile;
  exports["Inbox"] = Inbox;
  exports["Settings"] = Settings;
  exports["Expanded"] = Expanded;
  exports["Minimized"] = Minimized;
  exports["appUpdate"] = appUpdate;
  exports["appView"] = appView;
  exports["main"] = main;
  exports["mainWindowUpdate"] = mainWindowUpdate;
  exports["mainWindowView"] = mainWindowView;
  exports["sideBarUpdate"] = sideBarUpdate;
  exports["sideBarView"] = sideBarView;
  exports["genericMainWindowRoute"] = genericMainWindowRoute;
  exports["eqMainWindowRoute"] = eqMainWindowRoute;
  exports["genericSideBarRoute"] = genericSideBarRoute;
  exports["eqSideBarRoute"] = eqSideBarRoute;
  exports["genericAppRoute"] = genericAppRoute;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
